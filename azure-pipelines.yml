# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: CC=/usr/bin/clang CXX=/usr/bin/clang++ cmake $(Build.Repository.LocalPath)      
    displayName: 'Configure and generate project'

  - script: cmake --build . --config Debug
    displayName: 'Build on debug'

  - script: ctest -C Debug --output-on-failure
    displayName: 'Test on debug'

  - script: cmake --build . --config Release
    displayName: 'Build on release'

  - script: ctest -C Release --output-on-failure
    displayName: 'Test on release'

# - job: macOS
#   pool:
#     vmImage: 'macOS-10.14'
#   steps:
#   - script: cmake $(Build.Repository.LocalPath)
#     displayName: 'Configure and generate project'

#   - script: cmake --build . --config Debug
#     displayName: 'Build on debug'

#   - script: ctest -C Debug --output-on-failure
#     displayName: 'Test on debug'

#   - script: cmake --build . --config Release
#     displayName: 'Build on release'

#   - script: ctest -C Release --output-on-failure
#     displayName: 'Test on release'

- job: Windows
  pool:
    vmImage: 'windows-2019'
  steps:
  - script: cmake $(Build.Repository.LocalPath)
    displayName: 'Configure and generate project'

  - script: cmake --build . --config Debug
    displayName: 'Build on debug'

  - script: ctest -C Debug --output-on-failure
    displayName: 'Test on debug'

  - script: cmake --build . --config Release
    displayName: 'Build on release'

  - script: ctest -C Release --output-on-failure
    displayName: 'Test on release'
